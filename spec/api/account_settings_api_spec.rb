=begin
#Yext API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Yext::AccountSettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AccountSettingsApi' do
  before do
    # run before each test
    @api_instance = Yext::AccountSettingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountSettingsApi' do
    it 'should create an instance of AccountSettingsApi' do
      expect(@api_instance).to be_instance_of(Yext::AccountSettingsApi)
    end
  end

  # unit tests for assign_linked_account
  # LinkedAccounts: Assign
  # Copy an eligible Linked Account from the top-level parent account to a subaccount. Optionally assign the Linked Account to an entity in the subaccount.  This functionality is only available for certain Yext accounts. Please reach out to your Yext representative for more information. 
  # @param account_id 
  # @param linked_account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param assign_linked_account_request 
  # @param [Hash] opts the optional parameters
  # @return [AssignLinkedAccountResponse]
  describe 'assign_linked_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_approval_group
  # Approval Groups: Create
  # Creates an Approval Group.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param create_approval_group_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'create_approval_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user
  # Users: Create
  # Create a new User  **NOTE**:  If the **&#x60;v&#x60;** parameter is before &#x60;20190225&#x60;: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will not be accepted in the request body.  If the **&#x60;v&#x60;** parameter is &#x60;20190225&#x60; or later: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will be accepted in the request body. 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param create_user_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_approval_group
  # ApprovalGroups: Delete
  # Deletes an Approval Group.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param approval_group_id 
  # @param [Hash] opts the optional parameters
  # @return [EmptyResponse]
  describe 'delete_approval_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # Users: Delete
  # Deletes an existing User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [EmptyResponse]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account
  # Accounts: Get
  # Get details for an account
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @return [AccountResponse]
  describe 'get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_approval_group
  # ApprovalGroups: Get
  # Gets a single Approval Group.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param approval_group_id 
  # @param [Hash] opts the optional parameters
  # @return [ApprovalGroupResponse]
  describe 'get_approval_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_approval_groups
  # ApprovalGroups: List
  # Lists all Approval Groups in the account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @return [ApprovalGroupsResponse]
  describe 'get_approval_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_linked_account
  # LinkedAccounts: Get
  # Get details for an linked account.
  # @param account_id 
  # @param linked_account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @return [LinkedAccountResponse]
  describe 'get_linked_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_roles
  # Roles: Get
  # Retrieves a list of the roles that users can have within a customerâ€™s account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @return [RolesResponse]
  describe 'get_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Users: Get
  # Retrieves details of a specific User.  **NOTE**:  If the **&#x60;v&#x60;** parameter is before &#x60;20190225&#x60;: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will not be included in the response.  If the **&#x60;v&#x60;** parameter is &#x60;20190225&#x60; or later: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will be included in the response. 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # Users: List
  # Lists all Users in an account.  **NOTE**:  If the **&#x60;v&#x60;** parameter is before &#x60;20190225&#x60;: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will not be included in the response.  If the **&#x60;v&#x60;** parameter is &#x60;20190225&#x60; or later: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will be included in the response.  This endpoint does not support the **&#x60;all&#x60;** macro. 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return.
  # @option opts [Integer] :offset  Number of results to skip. Used to page through results. Cannot be used together with **&#x60;pageToken&#x60;**. 
  # @return [UsersResponse]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_accounts
  # Accounts: List
  # List all accounts that you have access to. Unless you are in Partner Portal mode, this will only be your own account.
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Returns only accounts whose name contains the provided string
  # @option opts [Integer] :limit 
  # @option opts [Integer] :offset  Number of results to skip. Used to page through results. Cannot be used together with **&#x60;pageToken&#x60;**. 
  # @return [AccountsResponse]
  describe 'list_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_linked_accounts
  # LinkedAccounts: List
  # Lists all linked accounts in an account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :entity_ids When provided, only linked accounts assigned to the specified entities will be returned.
  # @option opts [Array<String>] :publisher_ids When provided, only linked accounts for the specified sites will be returned.
  # @option opts [Array<String>] :statuses Defaults to all statuses. When specified, only linked accounts with the provided statuses will be returned.
  # @option opts [String] :page_token If a response to a previous request contained the **&#x60;nextPageToken&#x60;** field, pass that field&#39;s value as the **&#x60;pageToken&#x60;** parameter to retrieve the next page of data. 
  # @option opts [Integer] :limit Number of results to return.
  # @option opts [Integer] :offset  Number of results to skip. Used to page through results. Cannot be used together with **&#x60;pageToken&#x60;**. 
  # @return [LinkedAccountsResponse]
  describe 'list_linked_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_approval_group
  # ApprovalGroups: Update
  # Updates a single Approval Group.  **NOTE:** Despite using the PUT method, Approval Groups: Update only updates supplied fields. Omitted fields are not modified. However, the users list will be overwritten with what the user provides. 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param approval_group_id 
  # @param approval_group 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'update_approval_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Users: Update
  # Updates an existing User.  **NOTE**:  If the **&#x60;v&#x60;** parameter is before &#x60;20190225&#x60;: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will not be accepted in the request body.  If the **&#x60;v&#x60;** parameter is &#x60;20190225&#x60; or later: **&#x60;displayLanguagePreference&#x60;** and **&#x60;emailLanguagePreference&#x60;** will be accepted in the request body. If not provided, existing values will be cleared. 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param update_user_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_password
  # Users: Update Password
  # Updates a User&#39;s password.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdatePasswordRequest] :update_password_request 
  # @return [EmptyResponse]
  describe 'update_user_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
