=begin
#Yext API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Yext::AnalyticsFilter
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Yext::AnalyticsFilter do
  let(:instance) { Yext::AnalyticsFilter.new }

  describe 'test an instance of AnalyticsFilter' do
    it 'should create an instance of AnalyticsFilter' do
      expect(instance).to be_instance_of(Yext::AnalyticsFilter)
    end
  end
  describe 'test attribute "answers_backend"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ALGOLIA", "BING_CSE", "CUSTOM_SEARCHER", "GOOGLE_CSE", "KNOWLEDGE_MANAGER", "ZENDESK", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_backend = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_blank_search_term"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_click_label"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_click_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_click_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_cluster"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_configuration_version"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_configuration_version_label"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_direct_answer_click"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_direct_answer_field"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_direct_answer_field_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_direct_answer_field_value"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_direct_answer_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_experience"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_filter_key"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_filter_operator"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["BETWEEN", "EQUALS", "EQUAL_TO", "GREATER_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN", "LESS_THAN_OR_EQUAL_TO", "NEAR", "OPEN_AT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_filter_operator = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_filter_source"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ALGO", "QUERY_RULE", "UI"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_filter_source = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_filter_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["FACET", "NLP", "STATIC"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_filter_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_filter_value"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_has_case_start"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_has_case_submit"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_has_kg_results"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_has_search_term_cluster"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_has_voice_search"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_query_source"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["STANDARD", "OVERLAY"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_query_source = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_raw_search_term"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_referrer_domain"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_referrer_page_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_result_entity_position"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_result_title"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_result_vertical_position"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_search_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_search_term"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_search_term_cluster_performance"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_search_term_intent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_search_vertical"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_session_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_traffic_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["EXTERNAL", "INTERNAL"])
      # validator.allowable_values.each do |value|
      #   expect { instance.answers_traffic_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "answers_user_browser"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_city"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_country"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_device_class"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_lat_long"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_location_accuracy"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_postal_code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_user_region"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "answers_vertical_returned"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "click_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ADD_TO_CART", "APPLY_NOW", "BOOK_APPOINTMENT", "CALL", "CALL_TO_ACTION", "DETAIL", "DRIVING_DIRECTIONS", "EMAIL", "FEATURED_MESSAGE", "ORDER_NOW", "ROW_EXPAND", "RSVP", "THUMBS_UP", "TITLE", "UBER_LINK", "WEB", "OTHER", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.click_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "configuration_version_label"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["PRODUCTION", "STAGING"])
      # validator.allowable_values.each do |value|
      #   expect { instance.configuration_version_label = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "conversion_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["COST_SAVING_CUSTOMER_SUPPORT", "COST_SAVING_OTHER", "LEAD", "NO_TYPE", "PAGE_VIEW", "PURCHASE", "SIGN_UP", "OTHER_CONVERSION_TYPE", "UNKNOWN_CONVERSION_TYPE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.conversion_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "medium"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "product"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ANSWERS", "LISTINGS", "PAGES", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.product = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "traffic_source"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["EXTERNAL", "INTERNAL", "UNKNOWN_TRAFFIC_SOURCE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.traffic_source = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "value_proposition"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["COST_SAVINGS", "REVENUE_GENERATING"])
      # validator.allowable_values.each do |value|
      #   expect { instance.value_proposition = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "vertical_config_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "age"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["AGE13_17", "AGE18_24", "AGE25_34", "AGE35_44", "AGE45_54", "AGE55", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.age = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "visitor_email"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "visitor_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "visitor_id_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "visitor_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "competitor"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "countries"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "customer_action_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ACTION_DRIVING_DIRECTIONS", "ACTION_PHONE", "ACTION_WEBSITE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.customer_action_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "end_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "entity_group"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["CATEGORIES", "EVENTS", "LOCATIONS", "ORGANIZATIONS", "PEOPLE", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.entity_group = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "entity_ids"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "entity_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ATM", "CATEGORY_PAGE", "EVENT", "HEALTHCARE_PROFESSIONAL", "HEALTHCARE_FACILITY", "LOCATION", "ORGANIZATION", "RESTAURANT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.entity_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "event_search_condition"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["INITIAL_SCAN", "DAYS28_PRIOR", "DAYS7_PRIOR", "DAY_OF", "DAYS7_AFTER"])
      # validator.allowable_values.each do |value|
      #   expect { instance.event_search_condition = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "facebook_impression_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ORGANIC", "PAID", "VIRAL"])
      # validator.allowable_values.each do |value|
      #   expect { instance.facebook_impression_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "facebook_rsvp_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ATTENDING", "DECLINED", "INTERESTED", "MAYBE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.facebook_rsvp_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "facebook_story_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["CHECKIN", "COUPON", "EVENT", "FAN", "MENTION", "OTHER", "PAGE_POST", "QUESTION", "USER_POST"])
      # validator.allowable_values.each do |value|
      #   expect { instance.facebook_story_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "folder_ids"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "foursquare_checkin_age"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["AGE13_17", "AGE18_24", "AGE25_34", "AGE35_44", "AGE45_54"])
      # validator.allowable_values.each do |value|
      #   expect { instance.foursquare_checkin_age = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "foursquare_checkin_gender"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["FEMALE", "MALE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.foursquare_checkin_gender = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "foursquare_checkin_time_of_day"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["MORNING", "NOON", "AFTERNOON", "EVENING", "NIGHT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.foursquare_checkin_time_of_day = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "foursquare_checkin_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NEW", "REPEAT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.foursquare_checkin_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "frequent_words"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "gender"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["FEMALE", "MALE", "UNIDENTIFIED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.gender = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "google_action_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ACTION_DRIVING_DIRECTIONS", "ACTION_PHONE", "ACTION_WEBSITE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.google_action_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "google_query_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["QUERIES_CHAIN", "QUERIES_DIRECT", "QUERIES_INDIRECT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.google_query_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "hours"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "instagram_content_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PHOTO", "VIDEO"])
      # validator.allowable_values.each do |value|
      #   expect { instance.instagram_content_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "keyword"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "listings_live_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CLAIMED", "CREATED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.listings_live_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "location_ids"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "location_labels"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "match_position"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX_TO_TEN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.match_position = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "match_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["COMPETITOR", "COMPETITOR_PAID_AD", "CORPORATE_WEBSITE", "LISTINGS", "LOCAL_PACK", "LOCATION_PAGES", "NO_MATCH", "PAID_AD"])
      # validator.allowable_values.each do |value|
      #   expect { instance.match_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "max_search_frequency"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "min_search_frequency"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "page_types"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["DIRECTORY", "SEARCH", "STORE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.page_types = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "partners"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "platform_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["BOT", "DESKTOP", "MOBILE", "TABLET", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.platform_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "publisher_suggestion_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ACCEPTED", "CANCELED", "NEW", "REJECTED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.publisher_suggestion_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "query_template"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["KEYWORD", "KEYWORD_CITY", "KEYWORD_CITY_STATE", "KEYWORD_IN_CITY", "KEYWORD_NEAR_ME", "KEYWORD_ZIP"])
      # validator.allowable_values.each do |value|
      #   expect { instance.query_template = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "ratings"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "review_labels"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "search_engine"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["BING_DESKTOP", "GOOGLE_DESKTOP", "GOOGLE_MOBILE", "YAHOO_DESKTOP"])
      # validator.allowable_values.each do |value|
      #   expect { instance.search_engine = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "search_result_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["KNOWLEDGE_CARD_RESULT", "LOCAL_PACK_RESULT", "ORGANIC_RESULT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.search_result_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "search_terms"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sentiment_collection"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "start_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
